<?xml version="1.0" encoding="UTF-8"?>

<ruleset name="Custom Flow Ruleset - OWASP &amp; Salesforce Security"
         xmlns="http://pmd.sourceforge.net/ruleset/3.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/3.0.0
                             https://pmd.github.io/pmd-7.0.0/ruleset_3_0_0.xsd">

    <description>
        Custom PMD ruleset for Salesforce Flow metadata using XPath 3.1 rules (PMD 7).
        Handles XML namespace correctly and detects common Flow security issues
        aligned with OWASP Top 10 &amp; Salesforce Security Guidelines.
    </description>

    <!-- Rule 1: Hardcoded email addresses -->
    <rule name="HardcodedEmailInAssignment"
          language="xml"
          message="Avoid hardcoded email addresses in Flow elements."
          class="net.sourceforge.pmd.lang.xml.rule.DomXPathRule">
        <description>Flags stringValue nodes with an email address pattern.</description>
        <priority>2</priority>
        <properties>
            <property name="xpath">
                <value>
                    //*:elements[*:type='Assignment']/*:assignmentItems/*:value/*:stringValue[matches(string(.), '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$')]
                </value>
            </property>
        </properties>
    </rule>

    <!-- Rule 2: GetRecords without filters -->
    <rule name="UnfilteredGetRecords"
          language="xml"
          message="Avoid GetRecords elements without filter conditions."
          class="net.sourceforge.pmd.lang.xml.rule.DomXPathRule">
        <description>GetRecords should include a filter condition to avoid performance issues.</description>
        <priority>3</priority>
        <properties>
            <property name="xpath">
                <value>
                    //*:elements[*:type='GetRecords' and not(*:getRecords/*:filterLogic)]
                </value>
            </property>
        </properties>
    </rule>

    <!-- Rule 3: Empty Decision elements -->
    <rule name="EmptyDecision"
          language="xml"
          message="Decision element has no conditions defined."
          class="net.sourceforge.pmd.lang.xml.rule.DomXPathRule">
        <description>Detects Decision elements without conditions or outcomes.</description>
        <priority>3</priority>
        <properties>
            <property name="xpath">
                <value>
                    //*:elements[*:type='Decision' and not(*:decisions/*:conditions)]
                </value>
            </property>
        </properties>
    </rule>

    <!-- Rule 4: Hardcoded IDs in Assignment -->
    <rule name="HardcodedIdInFlow"
          language="xml"
          message="Avoid hardcoded Salesforce IDs in Flow assignments."
          class="net.sourceforge.pmd.lang.xml.rule.DomXPathRule">
        <description>Flags string values that match Salesforce ID patterns (15/18 chars).</description>
        <priority>2</priority>
        <properties>
            <property name="xpath">
                <value>
                    //*:elements/*:assignmentItems/*:value/*:stringValue[matches(string(.), '^[a-zA-Z0-9]{15}([a-zA-Z0-9]{3})?$')]
                </value>
            </property>
        </properties>
    </rule>

    <!-- Rule 5: Hardcoded URLs (http instead of https) -->
    <rule name="InsecureHttpUrl"
          language="xml"
          message="Avoid hardcoded HTTP URLs in Flow elements."
          class="net.sourceforge.pmd.lang.xml.rule.DomXPathRule">
        <description>Flags stringValue nodes containing http:// links.</description>
        <priority>3</priority>
        <properties>
            <property name="xpath">
                <value>
                    //*:elements/*:assignmentItems/*:value/*:stringValue[contains(string(.), 'http://')]
                </value>
            </property>
        </properties>
    </rule>

    <!-- Rule 6: Variables with no input/output flags -->
    <rule name="UnusedVariables"
          language="xml"
          message="Flow variables should have isInput or isOutput flags set."
          class="net.sourceforge.pmd.lang.xml.rule.DomXPathRule">
        <description>Detects variables missing input/output flags.</description>
        <priority>3</priority>
        <properties>
            <property name="xpath">
                <value>
                    //*:variables[not(@isInput) and not(@isOutput)]
                </value>
            </property>
        </properties>
    </rule>

    <!-- Rule 7: SOQL without WHERE (possible injection/data leaks) -->
    <rule name="UnrestrictedSOQL"
          language="xml"
          message="SOQL queries in flows should include WHERE conditions."
          class="net.sourceforge.pmd.lang.xml.rule.DomXPathRule">
        <description>Detects inline SOQL without a WHERE clause.</description>
        <priority>1</priority>
        <properties>
            <property name="xpath">
                <value>
                    //*:formula[matches(string(.), 'SELECT .* FROM .*', 'i') and not(matches(string(.), 'WHERE', 'i'))]
                </value>
            </property>
        </properties>
    </rule>

    <!-- Rule 8: Embedded HTML or Script (XSS risk) -->
    <rule name="EmbeddedHtmlOrScript"
          language="xml"
          message="Embedded HTML or script in strings may lead to XSS when displayed to users."
          class="net.sourceforge.pmd.lang.xml.rule.DomXPathRule">
        <description>Flags string values containing HTML tags or '&lt;script&gt;' tokens.</description>
        <priority>2</priority>
        <properties>
            <property name="xpath">
                <value>
                    //*:elements/*:assignmentItems/*:value/*:stringValue[matches(string(.), '&lt;script&gt;|&lt;.*?&gt;')]
                </value>
            </property>
        </properties>
    </rule>

    <!-- Rule 9: Hardcoded Secrets -->
    <rule name="HardcodedSecrets"
          language="xml"
          message="Avoid storing secrets, passwords, or tokens directly in flows."
          class="net.sourceforge.pmd.lang.xml.rule.DomXPathRule">
        <description>Detects assignments with values containing common secret patterns.</description>
        <priority>1</priority>
        <properties>
            <property name="xpath">
                <value>
                    //*:stringValue[matches(string(.), '(?i)(password|secret|api[_-]?key|token)')]
                </value>
            </property>
        </properties>
    </rule>

    <!-- Rule 10: Open Redirects -->
    <rule name="OpenRedirect"
          language="xml"
          message="Do not construct redirect URLs dynamically without validation."
          class="net.sourceforge.pmd.lang.xml.rule.DomXPathRule">
        <description>Flags assignments that build URLs from unvalidated variables (potential open redirect).</description>
        <priority>2</priority>
        <properties>
            <property name="xpath">
                <value>
                    //*:assignmentItems/*:value/*:stringValue[matches(string(.), 'https?://.*\{.*\}')]
                </value>
            </property>
        </properties>
    </rule>

</ruleset>
